import sys
from collections import defaultdict

class Node:
    def __init__(self, value):
        self.parent = self
        self.left = None
        self.right = None
        self.value = value

class LeafNode:
    def __init__(self, row):
        self.parent = self
        self.row = row


def makeTree(start, end, parent, left):
    #마지막 노드 일때
    if start == end:
        new = LeafNode(m)
        new.parent = parent
        new.row = start
        if left:
            parent.left = new
        else:
            parent.right = new
    else: #중간 노드일 때
        new = Node(m)
        new.parent = parent
        if left:
            parent.left = new
        else:
            parent.right = new

        mid = (start + end) // 2
        makeTree(start, mid, new, True)
        makeTree(mid+1, end, new, False)


def init(N:int, M:int) -> None:
    global wordData
    global root
    global emptyData
    global n
    global m
    n = N
    m = M

    #단어들 위치 & 길이     열, 행, 길이
    wordData = defaultdict(list)

    #길이 테스트용
    # wordMax = 100
    # for i in range(wordMax):
    #     wordData[i] = [1,1,1]

    #최대 빈공간 트리 만들기
    # tree = [m]*(4*n) # 완정 이진트리?
    root = Node(0)
    mid = n//2
    makeTree(0, mid, root, True)
    makeTree(mid +1, n, root, False)


    #빈공간 데이터 시작행, 길이
    emptyData = [[[0,m]] for _ in range(n)]

    new = LeafNode(m)
    if type(new)==Node:
        print("RRR")
    else:
        print("ddd")
    return

def writeWord(mId:int, mLen:int) -> int:
    return -1

def eraseWord(mId:int) -> int:
    return -1


##############################################################################################################################

CMD_INIT = 1
CMD_WRITE = 2
CMD_ERASE = 3

def run():
    query = int(input())
    ok = False
    for i in range(query):
        input_iter = iter(input().split())
        cmd = int(next(input_iter))
        if cmd == CMD_INIT:
            N = int(next(input_iter))
            M = int(next(input_iter))
            init(N, M)
            ok = True
        elif cmd == CMD_WRITE:
            mId = int(next(input_iter))
            mLen = int(next(input_iter))
            ret = writeWord(mId, mLen)
            ans = int(next(input_iter))
            if ans != ret:
                ok = False
        elif cmd == CMD_ERASE:
            mId = int(next(input_iter))
            ret = eraseWord(mId)
            ans = int(next(input_iter))
            if ans != ret:
                ok = False
    return ok

if __name__ == '__main__':
    sys.stdin = open('sample_input.txt', 'r')
    inputarray = input().split()
    TC = int(inputarray[0])
    MARK = int(inputarray[1])
    for testcase in range(1, TC + 1):
        score = MARK if run() else 0
        print("#%d %d" % (testcase, score), flush=True)
